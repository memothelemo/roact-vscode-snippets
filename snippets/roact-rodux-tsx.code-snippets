{
    "roactRoduxComponent": {
        "prefix": "rrcc",
        "body": [
            "import Roact, { Component } from \"@rbxts/roact\";",
            "import { connect } from \"@rbxts/roact-rodux\";",
            "",
            "interface Props extends MappedProps, MappedDispatch {}",
            "",
            "interface MappedProps {}",
            "interface MappedDispatch {}",
            "",
            "class ${0:$TM_FILENAME_BASE} extends Component<Props> {",
            "\tpublic static validateProps() {",
            "\t\treturn [true] as unknown as LuaTuple<[boolean, string?]>;",
            "\t}",
            "",
            "\trender() {",
            "\t\treturn <></>;",
            "\t}",
            "}",
            "",
            "const mapStateToProps = (state): MappedProps => {",
            "\treturn {",
            "\t}",
            "};",
            "",
            "const mapDispatchToProps = (dispatch): MappedDispatch => {",
            "\treturn {",
            "\t};",
            "};",
            "",
            "export default connect(mapStateToProps, mapDispatchToProps)(${0:$TM_FILENAME_BASE});",
        ],
        "description": "Stateful component with Rodux implementation"
    },

    "roactRoduxPureComponent": {
        "prefix": "rrpc",
        "body": [
            "import Roact, { Component } from \"@rbxts/roact\";",
            "import { connect } from \"@rbxts/roact-rodux\";",
            "",
            "interface Props extends MappedProps, MappedDispatch {}",
            "",
            "interface MappedProps {}",
            "interface MappedDispatch {}",
            "",
            "class ${0:$TM_FILENAME_BASE} extends Component<Props> {",
            "\tpublic static validateProps() {",
            "\t\treturn [true] as unknown as LuaTuple<[boolean, string?]>;",
            "\t}",
            "",
            "\trender() {",
            "\t\treturn <></>;",
            "\t}",
            "}",
            "",
            "const mapStateToProps = (state): MappedProps => {",
            "\treturn {",
            "\t}",
            "};",
            "",
            "const mapDispatchToProps = (dispatch): MappedDispatch => {",
            "\treturn {",
            "\t};",
            "};",
            "",
            "export default connect(mapStateToProps, mapDispatchToProps)(${0:$TM_FILENAME_BASE});",
        ],
        "description": "Stateful component with Rodux implementation"
    },
}